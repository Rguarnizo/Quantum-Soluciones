/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: inter_net (https://sketchfab.com/inter_net)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/round-camera-481837c1f6cb43debcc0cfa9bbaa33df
title: Round Camera
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'

import { useAnimations } from '@react-three/drei/useAnimations'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/scene.gltf')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <group name="Inner_corpuse" rotation={[0, 0, 1.24]}>
              <group position={[0, 0, -2.02]} rotation={[0, -0.69, 0]}>
                <mesh
                  material={materials.PBR_round_camera_white}
                  geometry={nodes.Lens_camera_PBR_round_camera_white_0.geometry}
                />
              </group>
              <mesh
                material={materials.PBR_round_camera_white}
                geometry={nodes.Inner_corpuse_PBR_round_camera_white_0.geometry}
              />
            </group>
            <group rotation={[0, 0, 0]}>
              <mesh
                material={materials.PBR_round_camera_white}
                geometry={nodes.glass_PBR_round_camera_white_0.geometry}
              />
            </group>
            <mesh
              material={materials.PBR_round_camera_white}
              geometry={nodes.Camera_corpus_PBR_round_camera_white_0.geometry}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
