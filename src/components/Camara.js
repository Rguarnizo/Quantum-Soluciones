/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: inter_net (https://sketchfab.com/inter_net)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/round-camera-481837c1f6cb43debcc0cfa9bbaa33df
title: Round Camera
*/

import * as THREE from "three";
import React, { useRef, useState, useEffect } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

import { useAnimations } from "@react-three/drei";
import { gsap } from "gsap";
import ScrollTrigger from "gsap/ScrollTrigger";

export default function Camara(props) {
  gsap.registerPlugin(ScrollTrigger);
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("Models/Camara/scene.gltf");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {

    gsap.to(group.current.rotation,{
        x: Math.PI,
        y: Math.PI,
        scrollTrigger: {
          trigger:".Productos",
          scrub: 1, 
          start: 'top top',
          end: '100%'
        }
    })
    
  });

  return (
    <group ref={group} {...props} dispose={null} scale={[0.1, 0.1, 0.1]}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <group name="Inner_corpuse" rotation={[0, 0, 1.24]}>
              <group position={[0, 0, -2.02]} rotation={[0, -0.69, 0]}>
                <mesh
                  material={materials.PBR_round_camera_white}
                  geometry={nodes.Lens_camera_PBR_round_camera_white_0.geometry}
                />
              </group>
              <mesh
                material={materials.PBR_round_camera_white}
                geometry={nodes.Inner_corpuse_PBR_round_camera_white_0.geometry}
              />
            </group>
            <group rotation={[0, 0, 0]}>
              <mesh
                material={materials.PBR_round_camera_white}
                geometry={nodes.glass_PBR_round_camera_white_0.geometry}
              />
            </group>
            <mesh
              material={materials.PBR_round_camera_white}
              geometry={nodes.Camera_corpus_PBR_round_camera_white_0.geometry}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("Models/Camara/scene.gltf");
